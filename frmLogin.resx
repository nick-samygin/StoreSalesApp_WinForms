<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCancel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAjdEVYdFRpdGxlAENhbmNlbDtTdG9wO0V4aXQ7QmFycztSaWJib247TJaWsgAAA5pJREFUOE8l
        k39Qk3Ucx78IptikutJOYl1gGyIOhmxtoB5jxoTBLPgjLE+9MhNQRsdxeZAkXhRO7jQDLu6IOjARZPyw
        hDmdeVlJF8PGgHILBPkhwvZswAbbkd677/PwvXs9977P5/N+P9/vc8+XeEytxHO7g3jvXCV0Bf6We0Rk
        KyqoenCi0DJeXPSEhdV/F2prDB8cFNOZIEqAx6QnC8YWQgP0rDGAstqqzSse/fQT/+y3X8Pd3gDP7U54
        Ke72RszUV2Hs5Am/+djRUjq7lrKKC6ArQCuX8YaO55nGK8rgudWO+e6LmOuoh6ulBq7mGrjb6jD3UyPo
        yzBx9nMMHM/9RRMpfIENYQOCzB8e/ma0vJQaL8FSlI+6cBGMmZlwNp6Ds+EcbmZlcTVL4TEuaOzLMvxx
        +P3L1LuWdGZlSq25OU8Y/Xe4V5CDBtU7MHWb0ZxTgm51BgzpGk6bunq5njn/I7iu1MGan/e0PjU1iZgy
        NLUjX5zE49oK1PGj8MA+BYdrCfZRBi3a0xz3qZ52ejFsm+JmpqvLMXK6BIa0dD25uUc9bD/6Lka0+3FD
        8xb+1J2Hd+k/OOd9sD1kYBtjMDvnw8LiMtczavZiOC8btiPZuKFKe0iuK1TL/2SnYOjtHbAfolvevRs9
        uguYcfswQ3fy2E1hfPi94isYlErcP5CGwYwEDGYlwaBIWSZX5UnLltQ3MKCWYWhvIq5JtsN46izd8hIe
        ORcx5fBSlnC9VIdr8dsxkC6HdY8U/SoJWC9pEsvHepUrha7YbWj7uAwD/zowOesFs+ADM+/H+IwX/fZZ
        6AtOoSsmGpY349CrEKMpVjZFaoXi7007ZLAoxbgULoRz2olJxyJcC370X6jmWAnxwPHIyc38lRSDnxMl
        qBbEdpKi0IhdF6Pinpp3bsNdpRy3DhyCn2FwT1cJoyyeIuE0W2N7d5Nl6EuMxg9bxMh/+TU1+yMFV74i
        vHwlcissybHoSZaiVRgJkyyOfhc5d2ZWs7UehRQWRQz0kVE4s0nAXp71bMCqrWvWbajcuLmvKUIA8y4R
        NSWgP0WCvoQoyhZ65ngMqhPQt1OE5s0CnNkYYRWteZZPvYFkouA9NiQw/hneprLn+C1VG8LRLojAHfHr
        6JXSQMqvVHfQWjXtffY8/8fo1cGvUk/QuHYfIeyDEysXg3dw3UuqEl5oa3lI2IQuhA9dSBjK14dNFvNC
        2/YHv6ihMyGUwBXfPvI/dZFG19yv1ioAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>